"""<day37_백준 2447_별 찍기-10>

# 문제
- 재귀적인 패턴으로 별을 찍어 보자. N이 3의 거듭제곱(3, 9, 27, ...)이라고 할 때, 크기 N의 패턴은 N×N 정사각형 모양이다.

크기 3의 패턴은 가운데에 공백이 있고, 가운데를 제외한 모든 칸에 별이 하나씩 있는 패턴이다.

- '***'
- '* *'
- '***'

- N이 3보다 클 경우, 크기 N의 패턴은 공백으로 채워진 가운데의 (N/3)×(N/3) 정사각형을 크기 N/3의 패턴으로 둘러싼 형태이다. 예를 들어 크기 27의 패턴은 예제 출력 1과 같다.

## 입력
- 첫째 줄에 N이 주어진다. N은 3의 거듭제곱이다. 즉 어떤 정수 k에 대해 N=3k이며, 이때 1 ≤ k < 8이다.

## 출력
- 첫째 줄부터 N번째 줄까지 별을 출력한다.

## 문제 링크
- https://www.acmicpc.net/problem/2447
"""

# https://ji-gwang.tistory.com/225

def get_stars(n):
    matrix = []                 # 별을 담을 리스트 선언
    for i in range(len(n) * 3): # 인자로 전달된 리스트의 길이 * 3만큼 반복(별의 총 줄 개수가 3배씩 늘어나기 때문 ex)3 -> 9 -> 27 ...)
        if i // len(n) == 1: #인자로 전달된 리스트의 길이로 나눈 몫이 1일 경우(즉,별모양에서 중간에 빈칸이 들어가는 경우의 범위)
            matrix.append(n[i % len(n)] + " " * len(n) + n[i % len(n)]) #해당 빈칸의 개수만큼(인자로전달된 리스트의 길이가 빈칸의 개수)별 중간에 추가해준다.
        else:#그 외 경우
            matrix.append(n[i % len(n)] * 3) #리스트에 저장되어있는 별의 개수 * 3배 만큼 추가해준다.(각 줄마다 별의 개수가 3배만큼 증가하기 때문)
    return matrix #별이 저장되어 있는 리스트를 반환


resultStar = ["***", "* *", "***"] # n==3일 때의 별 초기화

n = int(input())
count = 0 #별의 개수를 구하는 함수(get_stars) 반복횟수 구하기

while n != 3: #n이 3이아닐때 반복(3이면 그냥 바로 출력)
    n //= 3 #n을 3으로 나눈 몫을 대입
    count += 1 #한번 나눌때 마다 count값 1씩 증가

for _ in range(count): #count값 만큼 반복(n이 9이상일 때)
    resultStar = get_stars(resultStar) #반복할 때마다 별의 개수가 줄마다 3배씩 늘어나기 때문에 늘어난 별의 개수를 그 전 개수 별의 리스트에 대입해준다.

for j in resultStar: #리스트에 저장되어있는 별을 줄마다 출력
    print(j)